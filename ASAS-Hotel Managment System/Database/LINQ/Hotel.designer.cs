#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASAS_Hotel_Managment_System.Database.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HOTEL")]
	public partial class HotelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbaid_amount(baid_amount instance);
    partial void Updatebaid_amount(baid_amount instance);
    partial void Deletebaid_amount(baid_amount instance);
    partial void InsertBooked_Room(Booked_Room instance);
    partial void UpdateBooked_Room(Booked_Room instance);
    partial void DeleteBooked_Room(Booked_Room instance);
    partial void InsertReservation(Reservation instance);
    partial void UpdateReservation(Reservation instance);
    partial void DeleteReservation(Reservation instance);
    partial void InsertRoom_Suite(Room_Suite instance);
    partial void UpdateRoom_Suite(Room_Suite instance);
    partial void DeleteRoom_Suite(Room_Suite instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertSuite(Suite instance);
    partial void UpdateSuite(Suite instance);
    partial void DeleteSuite(Suite instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public HotelDataContext() : 
				base(global::ASAS_Hotel_Managment_System.Properties.Settings.Default.HOTELConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HotelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<baid_amount> baid_amounts
		{
			get
			{
				return this.GetTable<baid_amount>();
			}
		}
		
		public System.Data.Linq.Table<Booked_Room> Booked_Rooms
		{
			get
			{
				return this.GetTable<Booked_Room>();
			}
		}
		
		public System.Data.Linq.Table<Reservation> Reservations
		{
			get
			{
				return this.GetTable<Reservation>();
			}
		}
		
		public System.Data.Linq.Table<Room_Suite> Room_Suites
		{
			get
			{
				return this.GetTable<Room_Suite>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<Suite> Suites
		{
			get
			{
				return this.GetTable<Suite>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.baid_amount")]
	public partial class baid_amount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _reservertion_id;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _baid_amount1;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Reservation> _Reservation;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onreservertion_idChanging(System.Nullable<int> value);
    partial void Onreservertion_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onbaid_amount1Changing(System.Nullable<int> value);
    partial void Onbaid_amount1Changed();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public baid_amount()
		{
			this._Reservation = default(EntityRef<Reservation>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservertion_id", DbType="Int")]
		public System.Nullable<int> reservertion_id
		{
			get
			{
				return this._reservertion_id;
			}
			set
			{
				if ((this._reservertion_id != value))
				{
					if (this._Reservation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreservertion_idChanging(value);
					this.SendPropertyChanging();
					this._reservertion_id = value;
					this.SendPropertyChanged("reservertion_id");
					this.Onreservertion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="baid_amount", Storage="_baid_amount1", DbType="Int")]
		public System.Nullable<int> baid_amount1
		{
			get
			{
				return this._baid_amount1;
			}
			set
			{
				if ((this._baid_amount1 != value))
				{
					this.Onbaid_amount1Changing(value);
					this.SendPropertyChanging();
					this._baid_amount1 = value;
					this.SendPropertyChanged("baid_amount1");
					this.Onbaid_amount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reservation_baid_amount", Storage="_Reservation", ThisKey="reservertion_id", OtherKey="ID", IsForeignKey=true)]
		public Reservation Reservation
		{
			get
			{
				return this._Reservation.Entity;
			}
			set
			{
				Reservation previousValue = this._Reservation.Entity;
				if (((previousValue != value) 
							|| (this._Reservation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reservation.Entity = null;
						previousValue.baid_amounts.Remove(this);
					}
					this._Reservation.Entity = value;
					if ((value != null))
					{
						value.baid_amounts.Add(this);
						this._reservertion_id = value.ID;
					}
					else
					{
						this._reservertion_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Reservation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_baid_amount", Storage="_User", ThisKey="user_id", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.baid_amounts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.baid_amounts.Add(this);
						this._user_id = value.ID;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booked_Rooms")]
	public partial class Booked_Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _R_num;
		
		private System.Nullable<System.DateTime> _Entrig_time;
		
		private System.Nullable<System.DateTime> _exing_time;
		
		private System.Nullable<int> _price;
		
		private System.Nullable<int> _baid_amount;
		
		private string _name;
		
		private System.Nullable<int> _remainss;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnR_numChanging(System.Nullable<int> value);
    partial void OnR_numChanged();
    partial void OnEntrig_timeChanging(System.Nullable<System.DateTime> value);
    partial void OnEntrig_timeChanged();
    partial void Onexing_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onexing_timeChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void Onbaid_amountChanging(System.Nullable<int> value);
    partial void Onbaid_amountChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremainssChanging(System.Nullable<int> value);
    partial void OnremainssChanged();
    #endregion
		
		public Booked_Room()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_num", DbType="Int")]
		public System.Nullable<int> R_num
		{
			get
			{
				return this._R_num;
			}
			set
			{
				if ((this._R_num != value))
				{
					this.OnR_numChanging(value);
					this.SendPropertyChanging();
					this._R_num = value;
					this.SendPropertyChanged("R_num");
					this.OnR_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entrig_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Entrig_time
		{
			get
			{
				return this._Entrig_time;
			}
			set
			{
				if ((this._Entrig_time != value))
				{
					this.OnEntrig_timeChanging(value);
					this.SendPropertyChanging();
					this._Entrig_time = value;
					this.SendPropertyChanged("Entrig_time");
					this.OnEntrig_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exing_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> exing_time
		{
			get
			{
				return this._exing_time;
			}
			set
			{
				if ((this._exing_time != value))
				{
					this.Onexing_timeChanging(value);
					this.SendPropertyChanging();
					this._exing_time = value;
					this.SendPropertyChanged("exing_time");
					this.Onexing_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baid_amount", DbType="Int")]
		public System.Nullable<int> baid_amount
		{
			get
			{
				return this._baid_amount;
			}
			set
			{
				if ((this._baid_amount != value))
				{
					this.Onbaid_amountChanging(value);
					this.SendPropertyChanging();
					this._baid_amount = value;
					this.SendPropertyChanged("baid_amount");
					this.Onbaid_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remainss", DbType="Int")]
		public System.Nullable<int> remainss
		{
			get
			{
				return this._remainss;
			}
			set
			{
				if ((this._remainss != value))
				{
					this.OnremainssChanging(value);
					this.SendPropertyChanging();
					this._remainss = value;
					this.SendPropertyChanged("remainss");
					this.OnremainssChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservation")]
	public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _R_Type;
		
		private System.Nullable<int> _R_Number;
		
		private System.Nullable<int> _Price;
		
		private string _Religen;
		
		private System.Nullable<System.DateTime> _Entering_Time;
		
		private System.Nullable<System.DateTime> _Exiting_Time;
		
		private string _Name;
		
		private System.Nullable<int> _Room_Suite_ID;
		
		private System.Nullable<int> _Rooms_ID;
		
		private System.Nullable<int> _User_ID;
		
		private string _Details;
		
		private System.Nullable<int> _Baid_Amount;
		
		private System.Nullable<int> _remains;
		
		private EntitySet<baid_amount> _baid_amounts;
		
		private EntityRef<Room> _Room;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnR_TypeChanging(string value);
    partial void OnR_TypeChanged();
    partial void OnR_NumberChanging(System.Nullable<int> value);
    partial void OnR_NumberChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnReligenChanging(string value);
    partial void OnReligenChanged();
    partial void OnEntering_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEntering_TimeChanged();
    partial void OnExiting_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExiting_TimeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRoom_Suite_IDChanging(System.Nullable<int> value);
    partial void OnRoom_Suite_IDChanged();
    partial void OnRooms_IDChanging(System.Nullable<int> value);
    partial void OnRooms_IDChanged();
    partial void OnUser_IDChanging(System.Nullable<int> value);
    partial void OnUser_IDChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnBaid_AmountChanging(System.Nullable<int> value);
    partial void OnBaid_AmountChanged();
    partial void OnremainsChanging(System.Nullable<int> value);
    partial void OnremainsChanged();
    #endregion
		
		public Reservation()
		{
			this._baid_amounts = new EntitySet<baid_amount>(new Action<baid_amount>(this.attach_baid_amounts), new Action<baid_amount>(this.detach_baid_amounts));
			this._Room = default(EntityRef<Room>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_Type", DbType="NVarChar(50)")]
		public string R_Type
		{
			get
			{
				return this._R_Type;
			}
			set
			{
				if ((this._R_Type != value))
				{
					this.OnR_TypeChanging(value);
					this.SendPropertyChanging();
					this._R_Type = value;
					this.SendPropertyChanged("R_Type");
					this.OnR_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_Number", DbType="Int")]
		public System.Nullable<int> R_Number
		{
			get
			{
				return this._R_Number;
			}
			set
			{
				if ((this._R_Number != value))
				{
					this.OnR_NumberChanging(value);
					this.SendPropertyChanging();
					this._R_Number = value;
					this.SendPropertyChanged("R_Number");
					this.OnR_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religen", DbType="NVarChar(50)")]
		public string Religen
		{
			get
			{
				return this._Religen;
			}
			set
			{
				if ((this._Religen != value))
				{
					this.OnReligenChanging(value);
					this.SendPropertyChanging();
					this._Religen = value;
					this.SendPropertyChanged("Religen");
					this.OnReligenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entering_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Entering_Time
		{
			get
			{
				return this._Entering_Time;
			}
			set
			{
				if ((this._Entering_Time != value))
				{
					this.OnEntering_TimeChanging(value);
					this.SendPropertyChanging();
					this._Entering_Time = value;
					this.SendPropertyChanged("Entering_Time");
					this.OnEntering_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exiting_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Exiting_Time
		{
			get
			{
				return this._Exiting_Time;
			}
			set
			{
				if ((this._Exiting_Time != value))
				{
					this.OnExiting_TimeChanging(value);
					this.SendPropertyChanging();
					this._Exiting_Time = value;
					this.SendPropertyChanged("Exiting_Time");
					this.OnExiting_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Suite_ID", DbType="Int")]
		public System.Nullable<int> Room_Suite_ID
		{
			get
			{
				return this._Room_Suite_ID;
			}
			set
			{
				if ((this._Room_Suite_ID != value))
				{
					this.OnRoom_Suite_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_Suite_ID = value;
					this.SendPropertyChanged("Room_Suite_ID");
					this.OnRoom_Suite_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rooms_ID", DbType="Int")]
		public System.Nullable<int> Rooms_ID
		{
			get
			{
				return this._Rooms_ID;
			}
			set
			{
				if ((this._Rooms_ID != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRooms_IDChanging(value);
					this.SendPropertyChanging();
					this._Rooms_ID = value;
					this.SendPropertyChanged("Rooms_ID");
					this.OnRooms_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int")]
		public System.Nullable<int> User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(200)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Baid_Amount", DbType="Int")]
		public System.Nullable<int> Baid_Amount
		{
			get
			{
				return this._Baid_Amount;
			}
			set
			{
				if ((this._Baid_Amount != value))
				{
					this.OnBaid_AmountChanging(value);
					this.SendPropertyChanging();
					this._Baid_Amount = value;
					this.SendPropertyChanged("Baid_Amount");
					this.OnBaid_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remains", DbType="Int")]
		public System.Nullable<int> remains
		{
			get
			{
				return this._remains;
			}
			set
			{
				if ((this._remains != value))
				{
					this.OnremainsChanging(value);
					this.SendPropertyChanging();
					this._remains = value;
					this.SendPropertyChanged("remains");
					this.OnremainsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reservation_baid_amount", Storage="_baid_amounts", ThisKey="ID", OtherKey="reservertion_id")]
		public EntitySet<baid_amount> baid_amounts
		{
			get
			{
				return this._baid_amounts;
			}
			set
			{
				this._baid_amounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Reservation", Storage="_Room", ThisKey="Rooms_ID", OtherKey="ID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._Rooms_ID = value.ID;
					}
					else
					{
						this._Rooms_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Reservation", Storage="_User", ThisKey="User_ID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._User_ID = value.ID;
					}
					else
					{
						this._User_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_baid_amounts(baid_amount entity)
		{
			this.SendPropertyChanging();
			entity.Reservation = this;
		}
		
		private void detach_baid_amounts(baid_amount entity)
		{
			this.SendPropertyChanging();
			entity.Reservation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room_Suite")]
	public partial class Room_Suite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Room_ID;
		
		private System.Nullable<int> _Suite_ID;
		
		private EntityRef<Suite> _Suite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoom_IDChanging(System.Nullable<int> value);
    partial void OnRoom_IDChanged();
    partial void OnSuite_IDChanging(System.Nullable<int> value);
    partial void OnSuite_IDChanged();
    #endregion
		
		public Room_Suite()
		{
			this._Suite = default(EntityRef<Suite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", DbType="Int")]
		public System.Nullable<int> Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					this.OnRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_ID = value;
					this.SendPropertyChanged("Room_ID");
					this.OnRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suite_ID", DbType="Int")]
		public System.Nullable<int> Suite_ID
		{
			get
			{
				return this._Suite_ID;
			}
			set
			{
				if ((this._Suite_ID != value))
				{
					if (this._Suite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSuite_IDChanging(value);
					this.SendPropertyChanging();
					this._Suite_ID = value;
					this.SendPropertyChanged("Suite_ID");
					this.OnSuite_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Suite_Room_Suite", Storage="_Suite", ThisKey="Suite_ID", OtherKey="ID", IsForeignKey=true)]
		public Suite Suite
		{
			get
			{
				return this._Suite.Entity;
			}
			set
			{
				Suite previousValue = this._Suite.Entity;
				if (((previousValue != value) 
							|| (this._Suite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Suite.Entity = null;
						previousValue.Room_Suites.Remove(this);
					}
					this._Suite.Entity = value;
					if ((value != null))
					{
						value.Room_Suites.Add(this);
						this._Suite_ID = value.ID;
					}
					else
					{
						this._Suite_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Suite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _R_number;
		
		private System.Nullable<bool> _inside_Bath_Room;
		
		private System.Nullable<bool> _IS_Active;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnR_numberChanging(System.Nullable<int> value);
    partial void OnR_numberChanged();
    partial void Oninside_Bath_RoomChanging(System.Nullable<bool> value);
    partial void Oninside_Bath_RoomChanged();
    partial void OnIS_ActiveChanging(System.Nullable<bool> value);
    partial void OnIS_ActiveChanged();
    #endregion
		
		public Room()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_number", DbType="Int")]
		public System.Nullable<int> R_number
		{
			get
			{
				return this._R_number;
			}
			set
			{
				if ((this._R_number != value))
				{
					this.OnR_numberChanging(value);
					this.SendPropertyChanging();
					this._R_number = value;
					this.SendPropertyChanged("R_number");
					this.OnR_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inside_Bath_Room", DbType="Bit")]
		public System.Nullable<bool> inside_Bath_Room
		{
			get
			{
				return this._inside_Bath_Room;
			}
			set
			{
				if ((this._inside_Bath_Room != value))
				{
					this.Oninside_Bath_RoomChanging(value);
					this.SendPropertyChanging();
					this._inside_Bath_Room = value;
					this.SendPropertyChanged("inside_Bath_Room");
					this.Oninside_Bath_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_Active", DbType="Bit")]
		public System.Nullable<bool> IS_Active
		{
			get
			{
				return this._IS_Active;
			}
			set
			{
				if ((this._IS_Active != value))
				{
					this.OnIS_ActiveChanging(value);
					this.SendPropertyChanging();
					this._IS_Active = value;
					this.SendPropertyChanged("IS_Active");
					this.OnIS_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Reservation", Storage="_Reservations", ThisKey="ID", OtherKey="Rooms_ID")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _login_image_db;
		
		private string _main_image_db;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlogin_image_dbChanging(string value);
    partial void Onlogin_image_dbChanged();
    partial void Onmain_image_dbChanging(string value);
    partial void Onmain_image_dbChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_image_db", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string login_image_db
		{
			get
			{
				return this._login_image_db;
			}
			set
			{
				if ((this._login_image_db != value))
				{
					this.Onlogin_image_dbChanging(value);
					this.SendPropertyChanging();
					this._login_image_db = value;
					this.SendPropertyChanged("login_image_db");
					this.Onlogin_image_dbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_main_image_db", DbType="NVarChar(50)")]
		public string main_image_db
		{
			get
			{
				return this._main_image_db;
			}
			set
			{
				if ((this._main_image_db != value))
				{
					this.Onmain_image_dbChanging(value);
					this.SendPropertyChanging();
					this._main_image_db = value;
					this.SendPropertyChanged("main_image_db");
					this.Onmain_image_dbChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suite")]
	public partial class Suite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Room_Number;
		
		private EntitySet<Room_Suite> _Room_Suites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoom_NumberChanging(System.Nullable<int> value);
    partial void OnRoom_NumberChanged();
    #endregion
		
		public Suite()
		{
			this._Room_Suites = new EntitySet<Room_Suite>(new Action<Room_Suite>(this.attach_Room_Suites), new Action<Room_Suite>(this.detach_Room_Suites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Number", DbType="Int")]
		public System.Nullable<int> Room_Number
		{
			get
			{
				return this._Room_Number;
			}
			set
			{
				if ((this._Room_Number != value))
				{
					this.OnRoom_NumberChanging(value);
					this.SendPropertyChanging();
					this._Room_Number = value;
					this.SendPropertyChanged("Room_Number");
					this.OnRoom_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Suite_Room_Suite", Storage="_Room_Suites", ThisKey="ID", OtherKey="Suite_ID")]
		public EntitySet<Room_Suite> Room_Suites
		{
			get
			{
				return this._Room_Suites;
			}
			set
			{
				this._Room_Suites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Room_Suites(Room_Suite entity)
		{
			this.SendPropertyChanging();
			entity.Suite = this;
		}
		
		private void detach_Room_Suites(Room_Suite entity)
		{
			this.SendPropertyChanging();
			entity.Suite = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _password;
		
		private System.Nullable<int> _Salary;
		
		private System.Nullable<int> _Phone_Number;
		
		private string _Full_Name;
		
		private System.Nullable<bool> _IS_Admin;
		
		private System.Nullable<bool> _IS_User;
		
		private EntitySet<baid_amount> _baid_amounts;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnSalaryChanging(System.Nullable<int> value);
    partial void OnSalaryChanged();
    partial void OnPhone_NumberChanging(System.Nullable<int> value);
    partial void OnPhone_NumberChanged();
    partial void OnFull_NameChanging(string value);
    partial void OnFull_NameChanged();
    partial void OnIS_AdminChanging(System.Nullable<bool> value);
    partial void OnIS_AdminChanged();
    partial void OnIS_UserChanging(System.Nullable<bool> value);
    partial void OnIS_UserChanged();
    #endregion
		
		public User()
		{
			this._baid_amounts = new EntitySet<baid_amount>(new Action<baid_amount>(this.attach_baid_amounts), new Action<baid_amount>(this.detach_baid_amounts));
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Int")]
		public System.Nullable<int> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="Int")]
		public System.Nullable<int> Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_Name", DbType="NVarChar(70)")]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this.OnFull_NameChanging(value);
					this.SendPropertyChanging();
					this._Full_Name = value;
					this.SendPropertyChanged("Full_Name");
					this.OnFull_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_Admin", DbType="Bit")]
		public System.Nullable<bool> IS_Admin
		{
			get
			{
				return this._IS_Admin;
			}
			set
			{
				if ((this._IS_Admin != value))
				{
					this.OnIS_AdminChanging(value);
					this.SendPropertyChanging();
					this._IS_Admin = value;
					this.SendPropertyChanged("IS_Admin");
					this.OnIS_AdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_User", DbType="Bit")]
		public System.Nullable<bool> IS_User
		{
			get
			{
				return this._IS_User;
			}
			set
			{
				if ((this._IS_User != value))
				{
					this.OnIS_UserChanging(value);
					this.SendPropertyChanging();
					this._IS_User = value;
					this.SendPropertyChanged("IS_User");
					this.OnIS_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_baid_amount", Storage="_baid_amounts", ThisKey="ID", OtherKey="user_id")]
		public EntitySet<baid_amount> baid_amounts
		{
			get
			{
				return this._baid_amounts;
			}
			set
			{
				this._baid_amounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Reservation", Storage="_Reservations", ThisKey="ID", OtherKey="User_ID")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_baid_amounts(baid_amount entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_baid_amounts(baid_amount entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
